#!/usr/bin/env python3
"""
üîß VERIFICACI√ìN: SLUC System Names Fix
====================================

Script para verificar que se han corregido los nombres de sistemas
inv√°lidos en las llamadas a enviar_senal_log.

Versi√≥n: v1.0
Fecha: Agosto 2025
Estado: VERIFICACI√ìN SLUC FIX
"""

import sys
import os
from pathlib import Path

# Agregar el directorio ra√≠z al PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent.parent))

def test_sluc_system_names():
    """
    Verifica que los nombres de sistemas SLUC sean v√°lidos
    """
    print("üîß VERIFICACI√ìN: SLUC System Names Fix")
    print("=" * 50)

    try:
        # 1. Verificar importaciones de trading.py
        print("üìä 1. Verificando core/trading.py...")
        try:
            from core.trading import TRADING_SCHEDULE_AVAILABLE
            print(f"   ‚úÖ trading.py cargado correctamente")
            print(f"   üìã TRADING_SCHEDULE_AVAILABLE: {TRADING_SCHEDULE_AVAILABLE}")
        except Exception as e:
            print(f"   ‚ùå Error en trading.py: {e}")

        # 2. Verificar importaciones de limit_order_manager.py
        print("\nüéØ 2. Verificando core/limit_order_manager.py...")
        try:
            from core.limit_order_manager import MT5_CONNECTOR_AVAILABLE
            print(f"   ‚úÖ limit_order_manager.py cargado correctamente")
            print(f"   üìã MT5_CONNECTOR_AVAILABLE: {MT5_CONNECTOR_AVAILABLE}")
        except Exception as e:
            print(f"   ‚ùå Error en limit_order_manager.py: {e}")

        # 3. Verificar sistema de logging
        print("\nüìù 3. Verificando sistema de logging...")
        try:
            from sistema.logging_interface import enviar_senal_log

            # Test de nombres de sistemas v√°lidos
            test_systems = ["trading", "mt5", "ict", "poi", "dashboard"]

            for system in test_systems:
                try:
                    # Enviar log de prueba
                    enviar_senal_log("DEBUG", f"Test SLUC para sistema: {system}", "verify_sluc", system)
                    print(f"   ‚úÖ Sistema '{system}': V√ÅLIDO")
                except Exception as e:
                    print(f"   ‚ùå Sistema '{system}': ERROR - {e}")

        except Exception as e:
            print(f"   ‚ùå Error en sistema de logging: {e}")

        # 4. Verificar que no existen nombres inv√°lidos EN LOGS (no en imports)
        print("\nüîç 4. Verificando ausencia de nombres inv√°lidos EN LOGS...")

        # Buscar patrones espec√≠ficos de enviar_senal_log con nombres problem√°ticos
        problematic_patterns = [
            'enviar_senal_log.*"imports"',
            'enviar_senal_log.*"sistema.trading_schedule"',
            'enviar_senal_log.*"sistema.mt5_connector"'
        ]

        # Buscar en archivos fuente
        source_files = [
            "core/trading.py",
            "core/limit_order_manager.py"
        ]

        issues_found = False

        for file_path in source_files:
            full_path = Path(__file__).parent.parent / file_path
            if full_path.exists():
                try:
                    with open(full_path, 'r', encoding='utf-8') as f:
                        content = f.read()

                    for pattern in problematic_patterns:
                        import re
                        if re.search(pattern, content):
                            print(f"   ‚ùå Patr√≥n problem√°tico '{pattern}' encontrado en {file_path}")
                            issues_found = True
                        else:
                            print(f"   ‚úÖ Patr√≥n '{pattern}' NO encontrado en {file_path}")

                except Exception as e:
                    print(f"   ‚ö†Ô∏è Error leyendo {file_path}: {e}")

        if not issues_found:
            print("\nüéâ RESULTADO: Todos los nombres de sistemas SLUC en logs est√°n corregidos")
        else:
            print("\n‚ö†Ô∏è RESULTADO: A√∫n existen algunos nombres problem√°ticos en logs")

        print("\n" + "=" * 50)
        print("‚úÖ Verificaci√≥n completada")
        return not issues_found

    except Exception as e:
        print(f"\n‚ùå ERROR CR√çTICO en verificaci√≥n: {e}")
        return False

if __name__ == "__main__":
    success = test_sluc_system_names()
    sys.exit(0 if success else 1)
